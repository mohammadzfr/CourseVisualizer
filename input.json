{
  "nodes": [
    {
      "code": "SCI 099",
      "name": "Skills for Science Students",
      "description": "",
      "linkColor": "blue",
      "completed": true
    },
    {
      "code": "BUS 260",
      "name": "Introduction to Organizational Behaviour",
      "description": "This introductory course addresses the basic concepts and processes of organizational behaviour. Topics will include: individual level variables, such as perception, personality, attitudes, and motivation; interpersonal and group processes, such as communication, teams, leadership, and power; and, organizational level factors such as organizational design, culture, and change.\n*Note: Students may not receive credit for both BUS 260 and ADMN 260.*",
      "linkColor": "blue",
      "completed": false
    },
    {
      "code": "BUS 302",
      "name": "Entrepreneurship: Small Business Modeling and Feasibility Analysis",
      "description": "This course addresses early stage elements of starting up and operating a small business on a conceptual level. Using cases, competitions and experiential exercises, students will learn opportunity alertness and identification, building a value proposition, testing business hypotheses, creating competitive advantage, setting up financials, analyzing break even, charting growth and planning for exit. Students develop, build and test an entrepreneurial opportunity they identify, and assess its feasibility. The course applies to all business start up including non profit, for profit, for benefit and corporate or institutional intrapreneurship.\n**Prerequisite: Completion of a minimum of 30 credit hours of university studies.***\n*Note: Students may only receive credit for one of BUS 302, ADMN 302, and ENGG 436.*",
      "linkColor": "blue",
      "completed": false
    },
    {
      "code": "CS 110",
      "name": "Programming and Problem Solving",
      "description": "An introduction to problem-solving techniques, the fundamental concepts of programming, and the software design process. Topics will include: data types, control structures, scope rules, functions, files, and the mechanics of running, testing and debugging. Problems will be drawn from various science disciplines. *Note: CS majors who have mastered the course material in CS 110 through other means are eligible to write the CS 110 bypass exam.*",
      "prerequisites": [],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "CS 115",
      "name": "Object-Oriented Design",
      "description": "This course focuses on the concepts of object-oriented programming. Topics include data abstraction, classes, composition and inheritance, subtyping, dynamic binding, polymorphism and dynamic memory management. Other topics include type systems, two-dimensional arrays, records, references, searching and sorting algorithms, language translation. Software engineering: comprehensibility, correctness, efficiency, refactoring.",
      "prerequisites": ["CS 110", "MATH 110"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "CS 201",
      "name": "Introduction to Digital Systems",
      "description": "Hardware paradigms, logic minimization, sequential and combinational circuits, register transfer notation. Numerical data representation, number bases, floating-point and twoâ€™s-complement representation, representation of non-numeric data, records and arrays. Von Neumann architecture, control units, instruction sets, assembly language programming, addressing modes, subroutines, basic building blocks, computer components.",
      "prerequisites": ["CS 110"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "CS 210",
      "name": "Data Structures and Abstractions",
      "description": "This course introduces data abstraction, data structures and their implementations...",
      "prerequisites": ["CS 115", "MATH 110"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "CS 215",
      "name": "Web and Database Programming",
      "description": "This course introduces data abstraction, data structures and their implementations, the basics of algorithmic analysis, and the fundamental computing algorithms. Topics include stacks, queues, heaps, recursion, Master Theorem, asymptotic notation, computational complexity, empirical performance measurement, recursion based sorting algorithms, hashing, and trees (including binary trees, B-trees, and AVL trees).",
      "prerequisites": ["CS 210"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "CS 280",
      "name": "Risk and Reward in the Information Society",
      "description": "Social context of computing. Case study: human-computer interfaces and their evaluation. Methods and tools of analysis. Professional and ethical responsibilities. Risks and liabilities of computer-based systems. Intellectual property, privacy and civil liberties. Professional communication. Sustainability. Cybercrime.",
      "prerequisites": ["ENGL 100", "CS 110"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "CS 301",
      "name": "Digital Systems Architecture",
      "description": "Latency and bandwidth, cache memory, virtual memory, data compression, fault handling. Fundamentals of I/O, interrupts, external storage, buses, networks, multimedia support. Multiprocessor and parallel architectures, parallel decomposition, pipelining, shared memory systems, interconnection networks, cache consistency, memory consistency. Computational paradigms, performance evaluation, and effect of proximity.",
      "prerequisites": ["CS 201"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "CS 310",
      "name": "Discrete Computational Structures",
      "description": "Finite and discrete algebraic structures relating to computers; sets, functions, relations. Machine-oriented logic. Combinatorial problems and algorithms. Finite automata and formal language theory.",
      "prerequisites": ["MATH 110","MATH 122", "MATH 221", "CS 210"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "CS 330",
      "name": "Introduction to Operating Systems",
      "description": "Overview of operating systems: functionality, and design issues. Operating system principles: structures, abstractions, APIs, resource allocation, proximity, virtualization. Concurrency: process state, context switches, process communication, synchronization. Scheduling: preemption, schedulers, processes, and threads. Memory management. Security and protection. File systems. User interface. Distributed algorithms: consensus, termination, and fault tolerance.",
      "prerequisites": ["CS 210"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "CS 335",
      "name": "Computer Networks",
      "description": "Network architectures and protocols, networked applications, reliable data delivery, routing and forwarding, local area networks, resource allocation, mobility, reliability through redundancy. Security: secure design, defensive programming, threats and attacks, network security, cryptography.",
      "prerequisites": ["CS 210", "STAT 160"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "CS 340",
      "name": "Advanced Data Structures and Algorithm Design",
      "description": "Fundamental algorithms: depth- and breadth-first traversals, pattern matching, and graph algorithms. Algorithmic strategies: brute-force, greedy, divide-and-conquer, backtracking, branch-and-bound, dynamic programming, and randomized. Algorithm analysis, complexity theory, performance evaluation. Parallelism: fundamentals, algorithms, communication.",
      "prerequisites": ["CS 210"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "CS 350",
      "name": "Programming Language Concepts",
      "description": "Programming language genealogy and design. Imperative, functional, and object-oriented language paradigms. Context-free grammars and syntax trees. Data types, control structures, exception handling, data abstraction, information hiding, and non-determinism. Program representation, translation, and execution. Functional programming: advantages, constructs, closures, and higher-order operations. Parallel programming.",
      "prerequisites": ["CS 210"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "CS 372",
      "name": "Software Engineering Methodology",
      "description": "Fundamental principles of designing programs and developing large software systems that meet specifications and that are safe, secure, reliable and maintainable. Software process models, software project management, requirements engineering, software design, software construction, software verification and validation, software tools and environments, software evolution, software reliability.",
      "prerequisites": ["CS 215"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "CS 411",
      "name": "Computability and Formal Languages",
      "description": "The notion of effective procedure and Turing machine. The universal Turing machine. Nondeterministic Turing machine. Recursive functions and other computable functions. The halting problem and unsolvability. Grammar and formal language. Finite automata and regular grammars. Context-free grammars and push-down automata. Post correspondence problem. The Chomsky hierarchy of languages and context-sensitive language.",
      "prerequisites": ["CS 310"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "CS 412",
      "name": "Algorithm Analysis",
      "description": "A formal algorithmic language. Measures of complexity for time and space. Worst-case, average-case, and best-case analysis. Lower and upper bounds of algorithms (techniques include comparison trees, adversary arguments, and reduction). P and NP classes. NP-hardness and NP- completeness. Introduction to parallel computational models and algorithms.",
      "prerequisites": ["CS 310", "CS 340"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "CS 428",
      "name": "Human Computer Communications",
      "description": "This course stresses the importance of good interfaces and the relationship of user interface design to human-computer interaction. Other topics include: interface quality and methods of evaluation; interface design examples; dimensions of interface variability; dialogue genre; dialogue tools and techniques; user-centered design and task analysis; prototyping and the iterative design cycle; user interface implementation; prototyping tools and environments; I/O devices; basic computer graphics; color and sound.\n*Note: Students may not receive credit for more than one of CS 305 and CS 428*",
      "prerequisites": ["CS 215", "CS 280"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "CS 473",
      "name": "Management Support Systems",
      "description": "Strategic and tactical rewards resulting from the effective use of corporate information systems will be presented. Topics include techniques and tools for developing management support systems. Case studies on development and use of the systems will be discussed.",
      "prerequisites": ["CS 372"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "CS 476",
      "name": "Software Development Project",
      "description": "Software development projects following all the phases of the software process. Project planning and scheduling. Surveys on architectural styles, design patterns and components. Semester-long group projects with real- world applications. Projects will be integrative, require evaluation of potential solutions, and require work on a larger scale than typical course projects.",
      "prerequisites": ["CS 372"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "ECON 100",
      "name": "Introduction to Economic Issues",
      "description": "Basic economic concepts are used to explore current economic issues such as unemployment, inflation, trade disputes, the crisis in agriculture, pollution reduction, and health care.\n*Note: Students who have received credit for either ECON 201 or 202, or any ECON course numbered 300 or higher may not take ECON 100 for credit.*",
      "linkColor": "blue",
      "completed": false
    },
    {
      "code": "ECON 201",
      "name": "Introductory Microeconomics",
      "description": "Theory of how individual consumers and firms behave in a market economy. Emphasis is on evaluating how well markets deliver efficient and fair outcomes.\n***Prerequisite: 15 credit hours or ECON 100 or Pre-Calculus 20 (or equivalent)***\n*Note: Students who have already received credit for both ECON 201 and ECON 301 may not retake ECON 201 for credit.*",
      "linkColor": "blue",
      "completed": false
    },
    {
      "code": "ECON 202",
      "name": "Introductory Macroeconomics",
      "description": "Basic economic concepts are used to explain how economies operate at a national or regional level, with a focus on production, income, interest rates, prices, inflation, and unemployment. Principles are introduced for understanding and evaluating the methods by which governments can smooth fluctuations in overall economic activity.\n***Prerequisite: 15 credit hours or ECON 100 or Pre-Calculus 20 (or equivalent) ***\n*Note: Students who have already received credit for both ECON 202 and ECON 302 may not retake ECON 202 for credit.*",
      "linkColor": "blue",
      "completed": false
    },
    {
      "code": "ENEL 280",
      "name": "Electrical Circuits",
      "description": "DC circuits, Kirchoff's voltage and current laws, equivalent circuits, introduction to mesh and nodal methods, superposition, maximum power transfer, capacitors, inductors, transient analysis of RL and RC circuits, introduction to AC steady state analysis, introduction to electrical safety in engineering.",
      "prerequisites": ["Math 111"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "ENEL 282",
      "name": "Semiconductor Devices",
      "description": "Semiconductor materials and conduction principles. The characteristics of common semiconductor devices, including: PN junction diodes, bipolar and field effect transistors, thyristors and photodiodes. Linear models, circuit analysis and application examples.",
      "prerequisites": ["ENEL 280"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "ENEL 384",
      "name": "Digital Electronics",
      "description": "The introductory aspects of digital electronic circuits, including basic principles of digital systems, logic function and gates, boolean algebra and combinational logic, introduction to VHDL, introduction to FPGAs, combinational logic functions, digital arithmetic and arithmetic circuits, introduction to sequential logic, counters and shift registers, and state machine design.",
      "prerequisites": ["ENEL 282"],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "ENEL 387",
      "name": "",
      "description": "",
      "prerequisites": [],
      "linkColor": "green",
      "completed": false
    },
    {
      "code": "ENGL 100",
      "name": "Critical Reading and Writing I",
      "description": "This course develops students' proficiency in critical reading and writing through the study of a wide range of non-literary and literary texts, and the study of composition, with emphasis on connections between modes of reading and writing. *Note: Students who are planning to repeat ENGL 100 should seek academic advising before doing so*",
      "linkColor": "blue",
      "completed": false
    },
    {
      "code": "ENGL 110",
      "name": "Critical Reading and Writing II",
      "description": "A study of a special topic in literature, which may include non-literary texts, in conjunction with a continuation of the writing program begun in ENGL 100. *Note: Every section of ENGL 110 has a different focus. Please consult the Department's Supplementary Calendar or the list of current course offerings on the Departmental website.* *Note: Students who fail ENGL 110 twice should contact their faculty or their federated college immediately.*",
      "prerequisites": ["ENGL 100"],
      "linkColor": "blue",
      "completed": false
    },
    {
      "code": "MATH 110",
      "name": "Calculus I",
      "description": "An introductory class in the theory and techniques of differentiation and integration of algebraic and trigonometric functions. Topics include limits, optimization, curve sketching, and areas. *Note: Students can receive credit for only one of MATH 103 or 110*",
      "prerequisites": [],
      "linkColor": "red",
      "completed": false
    },
    {
      "code": "MATH 111",
      "name": "Calculus II",
      "description": "Differentiation and integration of exponential and logarithmic functions; methods of integration and applications; indeterminate forms, L'Hospital's rule and improper integrals; sequences, series, power series and Taylor series.",
      "prerequisites": ["MATH 110"],
      "linkColor": "red",
      "completed": false
    },
    {
      "code": "MATH 122",
      "name": "Linear Algebra I",
      "description": "A course intended to introduce students to elementary linear algebra, particularly at a computational and applied level. Topics include matrices and systems of equations, inversion, determinants, vectors, inner products, eigenvectors and eigenvalues.",
      "prerequisites": [],
      "linkColor": "red",
      "completed": false
    },
    {
      "code": "MATH 221",
      "name": "Introduction to Proofs and Problem Solving",
      "description": "An introductory course intended to familiarize students with mathematical reasoning and proof techniques, including direct reasoning, indirect reasoning, and mathematical induction. Topics include elementary number theory, logic, sets, functions, and relations. ***Prerequisite: Two university math courses beyond MATH 102.***",
      "prerequisites": [],
      "linkColor": "red",
      "completed": false
    },
    {
      "code": "STAT 160",
      "name": "Introductory Statistics",
      "description": "A comprehensive introduction to probability, probability distributions, sampling distributions, basic techniques of statistical inference, analysis of variance, linear regression, inference for categorical variables, and nonparametric statistics. *Note: STAT 160 is designed to provide a comprehensive single semester introduction to statistical techniques and is intended for students majoring in statistics, actuarial science, or any other program requiring a detailed knowledge of statistics. Students who receive credit for STAT 160 may not receive credit for STAT 100 or STAT 200*",
      "prerequisites": [],
      "linkColor": "blue",
      "completed": false
    },
    {
      "code": "PHYS 109",
      "name": "General Physics I",
      "description": "General algebra-based physics, including classical mechanics and geometrical optics. * Note: May not be taken for credit if a student has received credit for PHYS 111 or PHYS 112. Students cannot receive credit for both PHYS 105 and PHYS 109. *",
      "prerequisites": [],
      "linkColor": "blue",
      "completed": false
    },
    {
      "code": "PHYS 119",
      "name": "General Physics II",
      "description": "A continuation of PHYS 109: Fluid mechanics, heat and thermodynamics, waves, sound, radiation, electrostatics and electric current. *Note: Phys 119 may not be taken for credit if a student has previously received credit for Phys 111 or Phys 112*",
      "prerequisites": ["PHYS 109"],
      "linkColor": "blue",
      "completed": false
    },
    {
      "code": "PHYS 111",
      "name": "Mechanics",
      "description": "Kinematics in one, two and three dimensions, dynamics of particles and rigid bodies, including work, energy, and rotational kinematics and dynamics.",
      "prerequisites": ["MATH 110"],
      "linkColor": "blue",
      "completed": false
    },
    {
      "code": "PHYS 112",
      "name": "Waves and Optics",
      "description": "A course dealing with oscillations, wave motion, sound and geometrical and physical optics.",
      "prerequisites": ["PHYS 111", "MATH 110"],
      "linkColor": "blue",
      "completed": false
    },
    {
      "code": "STAT 200",
      "name": "Intermediate Statistics for Applications",
      "description": "A continuation of STAT 100; inference for two categorical variables; basic multiple linear regression; two-way analysis of variance; introduction to nonparametric methods; statistical process control; introduction to survey design. *Note: STAT 100 and STAT 200 are designed to provide a year-long introduction to statistical methodology with a view towards applications and are not intended for majors in statistics, actuarial science, or any other program requiring a detailed knowledge of statistics. Students who receive credit for STAT 200 may not receive credit for STAT 160*",
      "prerequisites": [],
      "linkColor": "blue",
      "completed": false
    }
  ]
}